<?php

namespace ShoppingCartBundle\Repository;

use Symfony\Component\HttpFoundation\Request;

use Symfony\Component\Finder\Finder;

/**
 * BooksRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BooksRepository extends \Doctrine\ORM\EntityRepository
{
    function getBooks($Filters)
    {
        $q = $Filters['q'] ?? false;
        $maxPrice = $Filters['max_price'] ?? false;
        $minPrice = $Filters['min_price'] ?? false;
        $category = $Filters['category'] ?? false;


        $em = $this->createQueryBuilder('b');

        if ($q)
            $em =  $em->andWhere('b.name like :q')->setParameter('q', $q . "%");
        if ($maxPrice)
            $em =  $em->andWhere('b.price <= :max_price')->setParameter('max_price', $maxPrice);
        if ($minPrice)
            $em =  $em->andWhere('b.price >= :min_price')->setParameter('min_price', $minPrice );
        if ($category)
            $em =  $em->andWhere('b.category = :category')->setParameter('category', $category );

        return $em->getQuery()->getResult();
    }

    function getRandomImage()
    {

        $finder = new Finder();
        $file_list = $finder->files()->in(__DIR__ . "/../../../web/images/books");
        $fileNames = [];
        foreach ($file_list as $fileItem) {
            $fileNames[] = $fileItem->getRelativePathname();
        }
        return ($fileNames[array_rand($fileNames)]);
    }
}
